//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gateway.Queue {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueOperationType", Namespace="http://schemas.datacontract.org/2004/07/Domain.Enums")]
    public enum QueueOperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BpmAssignTask = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BpmCreateProcess = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BpmCompleteTask = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BpmReleaseTask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BpmSignalEventTask = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pair", Namespace="http://schemas.datacontract.org/2004/07/Domain.Entities")]
    [System.SerializableAttribute()]
    public partial class Pair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gateway.Queue.ElementType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gateway.Queue.ElementType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElementType", Namespace="http://schemas.datacontract.org/2004/07/Domain.Enums")]
    public enum ElementType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Long = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Queue.QueueService")]
    public interface QueueService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueueService/PublishMessage", ReplyAction="http://tempuri.org/QueueService/PublishMessageResponse")]
        void PublishMessage(Gateway.Queue.QueueOperationType operationType, long taskId, string processDefinitionId, string nombreUsuario, Gateway.Queue.Pair[] variables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueueService/PublishMessage", ReplyAction="http://tempuri.org/QueueService/PublishMessageResponse")]
        System.Threading.Tasks.Task PublishMessageAsync(Gateway.Queue.QueueOperationType operationType, long taskId, string processDefinitionId, string nombreUsuario, Gateway.Queue.Pair[] variables);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QueueServiceChannel : Gateway.Queue.QueueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueueServiceClient : System.ServiceModel.ClientBase<Gateway.Queue.QueueService>, Gateway.Queue.QueueService {
        
        public QueueServiceClient() {
        }
        
        public QueueServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueueServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueueServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PublishMessage(Gateway.Queue.QueueOperationType operationType, long taskId, string processDefinitionId, string nombreUsuario, Gateway.Queue.Pair[] variables) {
            base.Channel.PublishMessage(operationType, taskId, processDefinitionId, nombreUsuario, variables);
        }
        
        public System.Threading.Tasks.Task PublishMessageAsync(Gateway.Queue.QueueOperationType operationType, long taskId, string processDefinitionId, string nombreUsuario, Gateway.Queue.Pair[] variables) {
            return base.Channel.PublishMessageAsync(operationType, taskId, processDefinitionId, nombreUsuario, variables);
        }
    }
}
